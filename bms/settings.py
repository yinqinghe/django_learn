"""
Django settings for bms project.

Generated by 'django-admin startproject' using Django 3.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os
from datetime import timedelta
from pathlib import Path

from django.utils.deprecation import MiddlewareMixin

class NotUseCsrfTokenMiddlewareMixin(MiddlewareMixin):
    def process_request(self,request):
        setattr(request, '_dont_enforce_csrf_checks', True)
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-gb^y=vw$%u48j9@s0=m7&5(s@573j5itou6-kd7^+yc89zbeag'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'medias').replace('\\', '/')#media即为图片上传的根路径

ALLOWED_HOSTS = []

LOGIN_URL='login'

# REDIS_TIMEOUT=7*24*60*60
# CUBES_REDIS_TIMEOUT=60*60
# NEVER_REDIS_TIMEOUT=60


APPEND_SLASH=True

SIMPLE_JWT = {
    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,
    'VERIFYING_KEY': None,
'ACCESS_TOKEN_LIFETIME': timedelta(minutes=800),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=2),
}
OAUTH2_PROVIDER = {
        'ACCESS_TOKEN_EXPIRE_SECONDS': 60 * 15,
        'OAUTH_SINGLE_ACCESS_TOKEN': True,
        'OAUTH_DELETE_EXPIRED': True
 }

# Application definition
# 全局视图认证组件   全局视图权限
REST_FRAMEWORK={
    'DEFAULT_FILTER_BACKENDS': ('django_filters.rest_framework.DjangoFilterBackend',
                                'rest_framework.filters.SearchFilter',
                                'rest_framework.filters.OrderingFilter',),
    # "DEFAULT_AUTHENTICATION_CLASSES":["app04.service.permissions"],
    # "DEFAULT_AUTHENTICATION_CLASSES":["app04.service.auth.Authentication",],
    "DEFAULT_PERMISSION_CLASSES": [
    # "app04.service.permissions.SVIPPermission",
    #     'rest_framework.permissions.IsAuthenticated',
    #     'rest_framework.permissions.AllowAny',
    ],
'DEFAULT_AUTHENTICATION_CLASSES': (
    # 'rest_framework.authentication.SessionAuthentication',
    # 'rest_framework.authentication.BasicAuthentication',
    # 'rest_framework.authentication.TokenAuthentication',
    'rest_framework_simplejwt.authentication.JWTAuthentication',
),
    'DEFAULT_THROTTLE_CLASSES':["app04.service.throttles.VisitThrottle"],
    'DEFAULT_THROTTLE_RATES':{
        "visit_rate":'1/m',
    },
    # 'PAGE_SIZE':2,  #这是全局的一个每页展示多少条的配置  一般不用它  因为不同的数据展示可能每页展示的数量是不同的
}
REST_FRAMEWORK_EXTENSIONS={
    'DEFAULT_CACHE_RESPONSE_TIMEOUT':60*60,  #默认缓存时间
    'DEFAULT_USE_CACHE':'default',   #缓存存储
}

CACHES={
    'default':{
        'BACKEND':'django_redis.cache.RedisCache',
        # 'LOCATION':'redis://:123456@127.0.0.1:6379/3',  #加密码:123456@
        'LOCATION': 'redis://127.0.0.1:6379/3',

        'OPTIONS':{
            'CLIENT_CLASS':'django_redis.client.DefaultClient',
            'PASSWORD': 123456,

        },
    },
    'sms_code': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': 'redis://:123456@127.0.0.1:6379/4',
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient'
        },
        'dummy':{
            'BACKEND':'django.core.cache.backends.dummy.DummyCache',
            'TIMEOUT':200,
            'OPTION':{
                'MAX_ENTRIES':300,
                'CULL_FREQUENCY':3
            },
            'KEY_PREFIX':'',
            'VERSION':1,
            # 'KEY_FUNCTION':
        },
        'fileBase':{
            'BACKEND':'django.core.cache.backends.filebased.FileBasedCache',
            'LOCATION':'/var/tmp/django_cache',
        },
        'database':{
            'BACKEND':'django.core.cache.backends.db.DatabaseCache',
            'LOCATION':'my_cache_table'  #数据库表名
        }


    }
}

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'app01',
    'app02',
    'myapp',
    'onetomany',
    'rest_framework',   #将它注册成APP
    'app03',
    'app04',
    'django_filters',
    'app05',
    # 'rest_framework.simplejwt'
    'debug_toolbar',
]
INTERNAL_IPS = ['127.0.0.1',]
# ALLOWED_HOSTS = []
# DEBUG_TOOLBAR_CONFIG = {
#     "JQUERY_URL": '//cdn.bootcss.com/jquery/2.2.4/jquery.min.js',
#     'SHOW_TOOLBAR_CALLBACK':lambda  x:True,
# }
MIDDLEWARE = [
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'utils.csrf_middleware.NotUseCsrfTokenMiddlewareMixin',
]

ROOT_URLCONF = 'bms.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'bms.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases
# DATABASE_ROUTERS=['app01.router.Router',]

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'library',
        'HOST':'localhost',
        'PORT':3306,
        'USER':'root',
        'PASSWORD':'123456',
        'CHARSET': 'utf8mb4',
        # 数据库时间日期的时区设定
        'TIME_ZONE': 'Asia/Chongqing',
    },
    'db2':{
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'library1',
        'HOST': 'localhost',
        'PORT': 3306,
        'USER': 'root',
        'PASSWORD': '123456',
        'CHARSET': 'utf8mb4',
        # 数据库时间日期的时区设定
        'TIME_ZONE': 'Asia/Chongqing',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

# TIME_ZONE = 'UTC'

TIME_ZONE = 'Asia/Shanghai'
USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS=[
    os.path.join(BASE_DIR,'static'),
]
# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
